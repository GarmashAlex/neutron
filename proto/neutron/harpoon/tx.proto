syntax = "proto3";
package neutron.harpoon;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/neutron-org/neutron/v5/x/harpoon/types";

// Defines the Msg interface of the module.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // Updates hook subscriptions for a given contract address.
  // Pass empty array to `hook_subscription.hooks` to remove subscription from this contract_address.
  // Only executable by governance.
  rpc ManageHookSubscription(MsgManageHookSubscription) returns (MsgManageHookSubscriptionResponse);
}

// Defines the Msg/ManageHookSubscription request type.
message MsgManageHookSubscription {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "neutron/x/harpoon/MsgManageHookSubscription";

  // The address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // Hook subscription to update.
  HookSubscription hook_subscription = 2;
}

// Defines the response structure for executing a MsgManageHookSubscription message.
message MsgManageHookSubscriptionResponse {}

// Describes new hook subscriptions for contract_address
message HookSubscription {
  // Contract address for which subscriptions will be updated.
  string contract_address = 2;

  // List of hooks to subscribe to. Existing hooks not specified here will be removed.
  repeated HookType hooks = 3;
}

// Hook types that can be subscribed to.
enum HookType {
  // Called after validator is created
  AfterValidatorCreated = 0;
  // Called before validator is modified
  BeforeValidatorModified = 1;
  // Called after validator is removed
  AfterValidatorRemoved = 2;
  // Called after validator is bonded
  AfterValidatorBonded = 3;
  // Called after validator begins unbonding
  AfterValidatorBeginUnbonding = 4;
  // Called before delegation is created
  BeforeDelegationCreated = 5;
  // Called before delegation's shares are modified
  BeforeDelegationSharesModified = 6;
  // Called before delegation is removed
  BeforeDelegationRemoved = 7;
  // Called after delegation is modified
  AfterDelegationModified = 8;
  // Called before validator is slashed
  BeforeValidatorSlashed = 9;
  // Called after unbonding is initiated
  AfterUnbondingInitiated = 10;
}
