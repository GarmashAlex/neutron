syntax = "proto3";
package neutron.revenue;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "ibc/core/client/v1/client.proto";
import "neutron/revenue/params.proto";

option go_package = "github.com/neutron-org/neutron/v5/x/revenue/types";

// Defines the revenue module's genesis state.
message GenesisState {
  // Revenue module parameters.
  Params params = 1 [(gogoproto.nullable) = false];

  // Revenue module state.
  State state = 2 [(gogoproto.nullable) = false];

  // Revenue module list of validators.
  repeated ValidatorInfo validators = 3 [(gogoproto.nullable) = false];

  // CumulativePrices is accumulate prices of the Revenue denom to calculate TWAP price for a given period of time
  repeated CumulativePrice cumulative_prices = 4;
}

// Contains information about a validator.
message ValidatorInfo {
  // The validator's consensus node address.
  string consensus_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // The number of blocks commited by the validator in the current month.
  uint64 commited_blocks_in_month = 2;

  // The number of oracle votes commited by the validator in the current month.
  uint64 commited_oracle_votes_in_month = 3;
}

// Contains information about the current state of the revenue module.
message State {
  // A numeric representation of the current month.
  int32 current_month = 1;

  // The number of blocks commited in the current month.
  uint64 block_counter = 2;
}

message CumulativePrice {
  string cumulative_price = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string last_price = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  int64 timestamp = 3;
}
